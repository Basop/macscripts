<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
    <key>autoremove</key>
    <false/>
    <key>catalogs</key>
    <array>
        <string>production</string>
    </array>
    <key>description</key>
    <string>Enables Network Time</string>
    <key>display_name</key>
    <string>Enable Network Time</string>
    <key>name</key>
    <string>NetworkTime</string>
    <key>installer_type</key>
    <string>nopkg</string>
    <key>minimum_os_version</key>
    <string>10.8.0</string>
    <key>unattended_install</key>
    <true/>
    <key>version</key>
    <string>1.0</string> 
    <key>uninstallable</key>
    <true/> 
	<key>installcheck_script</key>
	<string>#!/usr/bin/python

import sys
import subprocess
'''
Enables Network Time on OS X
'''
command = ['/usr/sbin/systemsetup', '-getusingnetworktime']

task = subprocess.Popen(command, stdout=subprocess.PIPE, stderr=subprocess.PIPE)
(out, err) = task.communicate()

# if already enabled, exit 1 as we don't need to install
if out.strip() == 'Network Time: On':
    sys.exit(1)
else:
    # if it doesn't we're exiting with 0 as we need to perform the install
    sys.exit(0)</string>
	<key>postinstall_script</key>
	<string>#!/usr/bin/python

import sys
import subprocess
'''
Enables Network Time on OS X
'''
command = ['/usr/sbin/systemsetup', '-getusingnetworktime']

task = subprocess.Popen(command, stdout=subprocess.PIPE, stderr=subprocess.PIPE)
(out, err) = task.communicate()

if out.strip() == 'Network Time: Off':
    command = ['/usr/sbin/systemsetup', '-setusingnetworktime', 'on']

    task = subprocess.Popen(command, stdout=subprocess.PIPE, stderr=subprocess.PIPE)
    (out, err) = task.communicate()</string>
	<key>uninstall_method</key>
	<string>uninstall_script</string>
	<key>uninstall_script</key>
	<string>#!/usr/bin/python

import sys
import subprocess
'''
Enables Network Time on OS X
'''
command = ['/usr/sbin/systemsetup', '-getusingnetworktime']

task = subprocess.Popen(command, stdout=subprocess.PIPE, stderr=subprocess.PIPE)
(out, err) = task.communicate()

if out.strip() == 'Network Time: On':
    command = ['/usr/sbin/systemsetup', '-setusingnetworktime', 'off']

    task = subprocess.Popen(command, stdout=subprocess.PIPE, stderr=subprocess.PIPE)
    (out, err) = task.communicate()</string>
</dict>
</plist>

